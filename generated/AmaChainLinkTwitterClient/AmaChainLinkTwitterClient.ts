// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChainlinkCancelled extends ethereum.Event {
  get params(): ChainlinkCancelled__Params {
    return new ChainlinkCancelled__Params(this);
  }
}

export class ChainlinkCancelled__Params {
  _event: ChainlinkCancelled;

  constructor(event: ChainlinkCancelled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkFulfilled extends ethereum.Event {
  get params(): ChainlinkFulfilled__Params {
    return new ChainlinkFulfilled__Params(this);
  }
}

export class ChainlinkFulfilled__Params {
  _event: ChainlinkFulfilled;

  constructor(event: ChainlinkFulfilled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkRequested extends ethereum.Event {
  get params(): ChainlinkRequested__Params {
    return new ChainlinkRequested__Params(this);
  }
}

export class ChainlinkRequested__Params {
  _event: ChainlinkRequested;

  constructor(event: ChainlinkRequested) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class DifferentSubDomainAllowed extends ethereum.Event {
  get params(): DifferentSubDomainAllowed__Params {
    return new DifferentSubDomainAllowed__Params(this);
  }
}

export class DifferentSubDomainAllowed__Params {
  _event: DifferentSubDomainAllowed;

  constructor(event: DifferentSubDomainAllowed) {
    this._event = event;
  }

  get _address(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DomainRegistered extends ethereum.Event {
  get params(): DomainRegistered__Params {
    return new DomainRegistered__Params(this);
  }
}

export class DomainRegistered__Params {
  _event: DomainRegistered;

  constructor(event: DomainRegistered) {
    this._event = event;
  }

  get useraddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nodehash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get twitterId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get twitterUsername(): string {
    return this._event.parameters[3].value.toString();
  }

  get label(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class RequestErrored extends ethereum.Event {
  get params(): RequestErrored__Params {
    return new RequestErrored__Params(this);
  }
}

export class RequestErrored__Params {
  _event: RequestErrored;

  constructor(event: RequestErrored) {
    this._event = event;
  }

  get useraddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class RequestFulfilled extends ethereum.Event {
  get params(): RequestFulfilled__Params {
    return new RequestFulfilled__Params(this);
  }
}

export class RequestFulfilled__Params {
  _event: RequestFulfilled;

  constructor(event: RequestFulfilled) {
    this._event = event;
  }

  get useraddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AmaChainLinkTwitterClient__resultsResult {
  value0: Bytes;
  value1: string;
  value2: string;
  value3: boolean;
  value4: Bytes;

  constructor(
    value0: Bytes,
    value1: string,
    value2: string,
    value3: boolean,
    value4: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromBytes(this.value4));
    return map;
  }
}

export class AmaChainLinkTwitterClient__userDetailsResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;
  value4: BigInt;
  value5: boolean;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: string,
    value4: BigInt,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }
}

export class AmaChainLinkTwitterClient extends ethereum.SmartContract {
  static bind(address: Address): AmaChainLinkTwitterClient {
    return new AmaChainLinkTwitterClient("AmaChainLinkTwitterClient", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  EMPTY_BYTES32(): Bytes {
    let result = super.call("EMPTY_BYTES32", "EMPTY_BYTES32():(bytes32)", []);

    return result[0].toBytes();
  }

  try_EMPTY_BYTES32(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "EMPTY_BYTES32",
      "EMPTY_BYTES32():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GOVERNANCE_ROLE(): Bytes {
    let result = super.call(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_GOVERNANCE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  addressRequestIDs(param0: Bytes): Address {
    let result = super.call(
      "addressRequestIDs",
      "addressRequestIDs(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toAddress();
  }

  try_addressRequestIDs(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "addressRequestIDs",
      "addressRequestIDs(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balance(): BigInt {
    let result = super.call("balance", "balance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_balance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balance", "balance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  expiration(): BigInt {
    let result = super.call("expiration", "expiration():(uint256)", []);

    return result[0].toBigInt();
  }

  try_expiration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("expiration", "expiration():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fee(): BigInt {
    let result = super.call("fee", "fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fee", "fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEncodedData(): Bytes {
    let result = super.call("getEncodedData", "getEncodedData():(bytes)", []);

    return result[0].toBytes();
  }

  try_getEncodedData(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getEncodedData",
      "getEncodedData():(bytes)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSocialIdToAddress(socialId: BigInt): Address {
    let result = super.call(
      "getSocialIdToAddress",
      "getSocialIdToAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(socialId)]
    );

    return result[0].toAddress();
  }

  try_getSocialIdToAddress(socialId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSocialIdToAddress",
      "getSocialIdToAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(socialId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getUsernameToAddress(_username: string): Address {
    let result = super.call(
      "getUsernameToAddress",
      "getUsernameToAddress(string):(address)",
      [ethereum.Value.fromString(_username)]
    );

    return result[0].toAddress();
  }

  try_getUsernameToAddress(_username: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getUsernameToAddress",
      "getUsernameToAddress(string):(address)",
      [ethereum.Value.fromString(_username)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  jobId(): Bytes {
    let result = super.call("jobId", "jobId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_jobId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("jobId", "jobId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  keccakHash(_string: string): Bytes {
    let result = super.call("keccakHash", "keccakHash(string):(bytes32)", [
      ethereum.Value.fromString(_string)
    ]);

    return result[0].toBytes();
  }

  try_keccakHash(_string: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall("keccakHash", "keccakHash(string):(bytes32)", [
      ethereum.Value.fromString(_string)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requestVerification(_username: string): Bytes {
    let result = super.call(
      "requestVerification",
      "requestVerification(string):(bytes32)",
      [ethereum.Value.fromString(_username)]
    );

    return result[0].toBytes();
  }

  try_requestVerification(_username: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "requestVerification",
      "requestVerification(string):(bytes32)",
      [ethereum.Value.fromString(_username)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  results(param0: Address): AmaChainLinkTwitterClient__resultsResult {
    let result = super.call(
      "results",
      "results(address):(bytes32,string,string,bool,bytes)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new AmaChainLinkTwitterClient__resultsResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBoolean(),
      result[4].toBytes()
    );
  }

  try_results(
    param0: Address
  ): ethereum.CallResult<AmaChainLinkTwitterClient__resultsResult> {
    let result = super.tryCall(
      "results",
      "results(address):(bytes32,string,string,bool,bytes)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaChainLinkTwitterClient__resultsResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBoolean(),
        value[4].toBytes()
      )
    );
  }

  trustedForwarder(): Address {
    let result = super.call(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_trustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userDetails(_address: Address): AmaChainLinkTwitterClient__userDetailsResult {
    let result = super.call(
      "userDetails",
      "userDetails(address):(string,string,string,string,uint256,bool)",
      [ethereum.Value.fromAddress(_address)]
    );

    return new AmaChainLinkTwitterClient__userDetailsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBoolean()
    );
  }

  try_userDetails(
    _address: Address
  ): ethereum.CallResult<AmaChainLinkTwitterClient__userDetailsResult> {
    let result = super.tryCall(
      "userDetails",
      "userDetails(address):(string,string,string,string,uint256,bool)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaChainLinkTwitterClient__userDetailsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBoolean()
      )
    );
  }

  usernameToAddress(param0: Bytes): Address {
    let result = super.call(
      "usernameToAddress",
      "usernameToAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toAddress();
  }

  try_usernameToAddress(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "usernameToAddress",
      "usernameToAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  versionRecipient(): string {
    let result = super.call(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );

    return result[0].toString();
  }

  try_versionRecipient(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class CancelRequestCall extends ethereum.Call {
  get inputs(): CancelRequestCall__Inputs {
    return new CancelRequestCall__Inputs(this);
  }

  get outputs(): CancelRequestCall__Outputs {
    return new CancelRequestCall__Outputs(this);
  }
}

export class CancelRequestCall__Inputs {
  _call: CancelRequestCall;

  constructor(call: CancelRequestCall) {
    this._call = call;
  }
}

export class CancelRequestCall__Outputs {
  _call: CancelRequestCall;

  constructor(call: CancelRequestCall) {
    this._call = call;
  }
}

export class DeleteVerificationCall extends ethereum.Call {
  get inputs(): DeleteVerificationCall__Inputs {
    return new DeleteVerificationCall__Inputs(this);
  }

  get outputs(): DeleteVerificationCall__Outputs {
    return new DeleteVerificationCall__Outputs(this);
  }
}

export class DeleteVerificationCall__Inputs {
  _call: DeleteVerificationCall;

  constructor(call: DeleteVerificationCall) {
    this._call = call;
  }

  get _ethaddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DeleteVerificationCall__Outputs {
  _call: DeleteVerificationCall;

  constructor(call: DeleteVerificationCall) {
    this._call = call;
  }
}

export class FulfillBytesCall extends ethereum.Call {
  get inputs(): FulfillBytesCall__Inputs {
    return new FulfillBytesCall__Inputs(this);
  }

  get outputs(): FulfillBytesCall__Outputs {
    return new FulfillBytesCall__Outputs(this);
  }
}

export class FulfillBytesCall__Inputs {
  _call: FulfillBytesCall;

  constructor(call: FulfillBytesCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get bytesData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class FulfillBytesCall__Outputs {
  _call: FulfillBytesCall;

  constructor(call: FulfillBytesCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _oracle(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _trustedForwarder(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _chainlinkTokenAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _jobId(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RequestVerificationCall extends ethereum.Call {
  get inputs(): RequestVerificationCall__Inputs {
    return new RequestVerificationCall__Inputs(this);
  }

  get outputs(): RequestVerificationCall__Outputs {
    return new RequestVerificationCall__Outputs(this);
  }
}

export class RequestVerificationCall__Inputs {
  _call: RequestVerificationCall;

  constructor(call: RequestVerificationCall) {
    this._call = call;
  }

  get _username(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RequestVerificationCall__Outputs {
  _call: RequestVerificationCall;

  constructor(call: RequestVerificationCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetJobIdCall extends ethereum.Call {
  get inputs(): SetJobIdCall__Inputs {
    return new SetJobIdCall__Inputs(this);
  }

  get outputs(): SetJobIdCall__Outputs {
    return new SetJobIdCall__Outputs(this);
  }
}

export class SetJobIdCall__Inputs {
  _call: SetJobIdCall;

  constructor(call: SetJobIdCall) {
    this._call = call;
  }

  get _jobId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetJobIdCall__Outputs {
  _call: SetJobIdCall;

  constructor(call: SetJobIdCall) {
    this._call = call;
  }
}

export class SetOracleCall extends ethereum.Call {
  get inputs(): SetOracleCall__Inputs {
    return new SetOracleCall__Inputs(this);
  }

  get outputs(): SetOracleCall__Outputs {
    return new SetOracleCall__Outputs(this);
  }
}

export class SetOracleCall__Inputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOracleCall__Outputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }
}

export class UpdateChainlinkAddressCall extends ethereum.Call {
  get inputs(): UpdateChainlinkAddressCall__Inputs {
    return new UpdateChainlinkAddressCall__Inputs(this);
  }

  get outputs(): UpdateChainlinkAddressCall__Outputs {
    return new UpdateChainlinkAddressCall__Outputs(this);
  }
}

export class UpdateChainlinkAddressCall__Inputs {
  _call: UpdateChainlinkAddressCall;

  constructor(call: UpdateChainlinkAddressCall) {
    this._call = call;
  }

  get _chainlinkTokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateChainlinkAddressCall__Outputs {
  _call: UpdateChainlinkAddressCall;

  constructor(call: UpdateChainlinkAddressCall) {
    this._call = call;
  }
}

export class WithdrawLinkCall extends ethereum.Call {
  get inputs(): WithdrawLinkCall__Inputs {
    return new WithdrawLinkCall__Inputs(this);
  }

  get outputs(): WithdrawLinkCall__Outputs {
    return new WithdrawLinkCall__Outputs(this);
  }
}

export class WithdrawLinkCall__Inputs {
  _call: WithdrawLinkCall;

  constructor(call: WithdrawLinkCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawLinkCall__Outputs {
  _call: WithdrawLinkCall;

  constructor(call: WithdrawLinkCall) {
    this._call = call;
  }
}

export class WithdrawLinkWithAddressCall extends ethereum.Call {
  get inputs(): WithdrawLinkWithAddressCall__Inputs {
    return new WithdrawLinkWithAddressCall__Inputs(this);
  }

  get outputs(): WithdrawLinkWithAddressCall__Outputs {
    return new WithdrawLinkWithAddressCall__Outputs(this);
  }
}

export class WithdrawLinkWithAddressCall__Inputs {
  _call: WithdrawLinkWithAddressCall;

  constructor(call: WithdrawLinkWithAddressCall) {
    this._call = call;
  }

  get linkTokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawLinkWithAddressCall__Outputs {
  _call: WithdrawLinkWithAddressCall;

  constructor(call: WithdrawLinkWithAddressCall) {
    this._call = call;
  }
}
