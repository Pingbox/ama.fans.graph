// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AmountReceived extends ethereum.Event {
  get params(): AmountReceived__Params {
    return new AmountReceived__Params(this);
  }
}

export class AmountReceived__Params {
  _event: AmountReceived;

  constructor(event: AmountReceived) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Blocked extends ethereum.Event {
  get params(): Blocked__Params {
    return new Blocked__Params(this);
  }
}

export class Blocked__Params {
  _event: Blocked;

  constructor(event: Blocked) {
    this._event = event;
  }

  get blocker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get blocked(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Follow extends ethereum.Event {
  get params(): Follow__Params {
    return new Follow__Params(this);
  }
}

export class Follow__Params {
  _event: Follow;

  constructor(event: Follow) {
    this._event = event;
  }

  get followed(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get follower(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MessageCreated extends ethereum.Event {
  get params(): MessageCreated__Params {
    return new MessageCreated__Params(this);
  }
}

export class MessageCreated__Params {
  _event: MessageCreated;

  constructor(event: MessageCreated) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get messageId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get expiryTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get link(): string {
    return this._event.parameters[5].value.toString();
  }

  get messageType(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class MessageValueClaimed extends ethereum.Event {
  get params(): MessageValueClaimed__Params {
    return new MessageValueClaimed__Params(this);
  }
}

export class MessageValueClaimed__Params {
  _event: MessageValueClaimed;

  constructor(event: MessageValueClaimed) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PostCreated extends ethereum.Event {
  get params(): PostCreated__Params {
    return new PostCreated__Params(this);
  }
}

export class PostCreated__Params {
  _event: PostCreated;

  constructor(event: PostCreated) {
    this._event = event;
  }

  get postId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get link(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class PostTipCreated extends ethereum.Event {
  get params(): PostTipCreated__Params {
    return new PostTipCreated__Params(this);
  }
}

export class PostTipCreated__Params {
  _event: PostTipCreated;

  constructor(event: PostTipCreated) {
    this._event = event;
  }

  get postId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get postTipId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PostTransferred extends ethereum.Event {
  get params(): PostTransferred__Params {
    return new PostTransferred__Params(this);
  }
}

export class PostTransferred__Params {
  _event: PostTransferred;

  constructor(event: PostTransferred) {
    this._event = event;
  }

  get postId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get transferFrom(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get transferTo(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ResponseCreated extends ethereum.Event {
  get params(): ResponseCreated__Params {
    return new ResponseCreated__Params(this);
  }
}

export class ResponseCreated__Params {
  _event: ResponseCreated;

  constructor(event: ResponseCreated) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get answerLink(): string {
    return this._event.parameters[3].value.toString();
  }

  get responseValue(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ResponseMarked extends ethereum.Event {
  get params(): ResponseMarked__Params {
    return new ResponseMarked__Params(this);
  }
}

export class ResponseMarked__Params {
  _event: ResponseMarked;

  constructor(event: ResponseMarked) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get answerer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get responseType(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TipCreated extends ethereum.Event {
  get params(): TipCreated__Params {
    return new TipCreated__Params(this);
  }
}

export class TipCreated__Params {
  _event: TipCreated;

  constructor(event: TipCreated) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get tipId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TipValueClaimed extends ethereum.Event {
  get params(): TipValueClaimed__Params {
    return new TipValueClaimed__Params(this);
  }
}

export class TipValueClaimed__Params {
  _event: TipValueClaimed;

  constructor(event: TipValueClaimed) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get tipId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UnBlock extends ethereum.Event {
  get params(): UnBlock__Params {
    return new UnBlock__Params(this);
  }
}

export class UnBlock__Params {
  _event: UnBlock;

  constructor(event: UnBlock) {
    this._event = event;
  }

  get unblocker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unblocked(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UnFollow extends ethereum.Event {
  get params(): UnFollow__Params {
    return new UnFollow__Params(this);
  }
}

export class UnFollow__Params {
  _event: UnFollow;

  constructor(event: UnFollow) {
    this._event = event;
  }

  get unfollowed(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unfollower(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UnWhitelisted extends ethereum.Event {
  get params(): UnWhitelisted__Params {
    return new UnWhitelisted__Params(this);
  }
}

export class UnWhitelisted__Params {
  _event: UnWhitelisted;

  constructor(event: UnWhitelisted) {
    this._event = event;
  }

  get unwhitelister(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unwhitelisted(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Whitelisted extends ethereum.Event {
  get params(): Whitelisted__Params {
    return new Whitelisted__Params(this);
  }
}

export class Whitelisted__Params {
  _event: Whitelisted;

  constructor(event: Whitelisted) {
    this._event = event;
  }

  get whitelister(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get whitelisted(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AmaFansCore__gePublicMessageIdsResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__getPostIdsResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__getPostTipIdsResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__getPrivateMessageIdsResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__getTipIdsResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__getTipIdsOfMessageResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__getTipIdsOfPostResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__messagesResult {
  value0: string;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: Address;
  value5: Address;
  value6: BigInt;
  value7: BigInt;
  value8: i32;
  value9: BigInt;
  value10: i32;
  value11: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: BigInt,
    value3: BigInt,
    value4: Address,
    value5: Address,
    value6: BigInt,
    value7: BigInt,
    value8: i32,
    value9: BigInt,
    value10: i32,
    value11: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8))
    );
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set(
      "value10",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value10))
    );
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    return map;
  }
}

export class AmaFansCore__postTipsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: Bytes;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromFixedBytes(this.value3));
    return map;
  }
}

export class AmaFansCore__postsResult {
  value0: string;
  value1: BigInt;
  value2: BigInt;
  value3: Address;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: string,
    value1: BigInt,
    value2: BigInt,
    value3: Address,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }
}

export class AmaFansCore__tipsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: Bytes;
  value4: boolean;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: Bytes,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromFixedBytes(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }
}

export class AmaFansCore__usersResult {
  value0: BigInt;
  value1: BigInt;
  value2: Bytes;

  constructor(value0: BigInt, value1: BigInt, value2: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBytes(this.value2));
    return map;
  }
}

export class AmaFansCore extends ethereum.SmartContract {
  static bind(address: Address): AmaFansCore {
    return new AmaFansCore("AmaFansCore", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GOVERNANCE_ROLE(): Bytes {
    let result = super.call(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_GOVERNANCE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  balance(): BigInt {
    let result = super.call("balance", "balance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_balance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balance", "balance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseURI(): string {
    let result = super.call("baseURI", "baseURI():(string)", []);

    return result[0].toString();
  }

  try_baseURI(): ethereum.CallResult<string> {
    let result = super.tryCall("baseURI", "baseURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  checkBlocked(_sender: Address, _recipient: Address): boolean {
    let result = super.call(
      "checkBlocked",
      "checkBlocked(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient)
      ]
    );

    return result[0].toBoolean();
  }

  try_checkBlocked(
    _sender: Address,
    _recipient: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkBlocked",
      "checkBlocked(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkFollower(_address: Address): boolean {
    let result = super.call("checkFollower", "checkFollower(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBoolean();
  }

  try_checkFollower(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkFollower",
      "checkFollower(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkWhitelist(_sender: Address, _recipient: Address): boolean {
    let result = super.call(
      "checkWhitelist",
      "checkWhitelist(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient)
      ]
    );

    return result[0].toBoolean();
  }

  try_checkWhitelist(
    _sender: Address,
    _recipient: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkWhitelist",
      "checkWhitelist(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  feeCollector(): Address {
    let result = super.call("feeCollector", "feeCollector():(address)", []);

    return result[0].toAddress();
  }

  try_feeCollector(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeCollector", "feeCollector():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeNumerator(): BigInt {
    let result = super.call("feeNumerator", "feeNumerator():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feeNumerator(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("feeNumerator", "feeNumerator():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gePublicMessageIds(
    skip_: BigInt,
    limit_: BigInt
  ): AmaFansCore__gePublicMessageIdsResult {
    let result = super.call(
      "gePublicMessageIds",
      "gePublicMessageIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );

    return new AmaFansCore__gePublicMessageIdsResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_gePublicMessageIds(
    skip_: BigInt,
    limit_: BigInt
  ): ethereum.CallResult<AmaFansCore__gePublicMessageIdsResult> {
    let result = super.tryCall(
      "gePublicMessageIds",
      "gePublicMessageIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__gePublicMessageIdsResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  getPostIds(skip_: BigInt, limit_: BigInt): AmaFansCore__getPostIdsResult {
    let result = super.call(
      "getPostIds",
      "getPostIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );

    return new AmaFansCore__getPostIdsResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_getPostIds(
    skip_: BigInt,
    limit_: BigInt
  ): ethereum.CallResult<AmaFansCore__getPostIdsResult> {
    let result = super.tryCall(
      "getPostIds",
      "getPostIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__getPostIdsResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  getPostTipIds(
    skip_: BigInt,
    limit_: BigInt
  ): AmaFansCore__getPostTipIdsResult {
    let result = super.call(
      "getPostTipIds",
      "getPostTipIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );

    return new AmaFansCore__getPostTipIdsResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_getPostTipIds(
    skip_: BigInt,
    limit_: BigInt
  ): ethereum.CallResult<AmaFansCore__getPostTipIdsResult> {
    let result = super.tryCall(
      "getPostTipIds",
      "getPostTipIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__getPostTipIdsResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  getPrivateMessageIds(
    skip_: BigInt,
    limit_: BigInt
  ): AmaFansCore__getPrivateMessageIdsResult {
    let result = super.call(
      "getPrivateMessageIds",
      "getPrivateMessageIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );

    return new AmaFansCore__getPrivateMessageIdsResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_getPrivateMessageIds(
    skip_: BigInt,
    limit_: BigInt
  ): ethereum.CallResult<AmaFansCore__getPrivateMessageIdsResult> {
    let result = super.tryCall(
      "getPrivateMessageIds",
      "getPrivateMessageIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__getPrivateMessageIdsResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTipIds(skip_: BigInt, limit_: BigInt): AmaFansCore__getTipIdsResult {
    let result = super.call(
      "getTipIds",
      "getTipIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );

    return new AmaFansCore__getTipIdsResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_getTipIds(
    skip_: BigInt,
    limit_: BigInt
  ): ethereum.CallResult<AmaFansCore__getTipIdsResult> {
    let result = super.tryCall(
      "getTipIds",
      "getTipIds(uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__getTipIdsResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  getTipIdsOfMessage(
    messageId_: Bytes,
    skip_: BigInt,
    limit_: BigInt
  ): AmaFansCore__getTipIdsOfMessageResult {
    let result = super.call(
      "getTipIdsOfMessage",
      "getTipIdsOfMessage(bytes32,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromFixedBytes(messageId_),
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );

    return new AmaFansCore__getTipIdsOfMessageResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_getTipIdsOfMessage(
    messageId_: Bytes,
    skip_: BigInt,
    limit_: BigInt
  ): ethereum.CallResult<AmaFansCore__getTipIdsOfMessageResult> {
    let result = super.tryCall(
      "getTipIdsOfMessage",
      "getTipIdsOfMessage(bytes32,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromFixedBytes(messageId_),
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__getTipIdsOfMessageResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  getTipIdsOfPost(
    postId_: Bytes,
    skip_: BigInt,
    limit_: BigInt
  ): AmaFansCore__getTipIdsOfPostResult {
    let result = super.call(
      "getTipIdsOfPost",
      "getTipIdsOfPost(bytes32,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromFixedBytes(postId_),
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );

    return new AmaFansCore__getTipIdsOfPostResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_getTipIdsOfPost(
    postId_: Bytes,
    skip_: BigInt,
    limit_: BigInt
  ): ethereum.CallResult<AmaFansCore__getTipIdsOfPostResult> {
    let result = super.tryCall(
      "getTipIdsOfPost",
      "getTipIdsOfPost(bytes32,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromFixedBytes(postId_),
        ethereum.Value.fromUnsignedBigInt(skip_),
        ethereum.Value.fromUnsignedBigInt(limit_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__getTipIdsOfPostResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  messages(param0: Bytes): AmaFansCore__messagesResult {
    let result = super.call(
      "messages",
      "messages(bytes32):(string,string,uint256,uint256,address,address,uint256,uint256,uint8,uint256,uint8,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new AmaFansCore__messagesResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toAddress(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toI32(),
      result[9].toBigInt(),
      result[10].toI32(),
      result[11].toBigInt()
    );
  }

  try_messages(
    param0: Bytes
  ): ethereum.CallResult<AmaFansCore__messagesResult> {
    let result = super.tryCall(
      "messages",
      "messages(bytes32):(string,string,uint256,uint256,address,address,uint256,uint256,uint8,uint256,uint8,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__messagesResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toAddress(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toI32(),
        value[9].toBigInt(),
        value[10].toI32(),
        value[11].toBigInt()
      )
    );
  }

  minTimeLock(): BigInt {
    let result = super.call("minTimeLock", "minTimeLock():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minTimeLock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minTimeLock", "minTimeLock():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minimumBid(_messageType: BigInt): BigInt {
    let result = super.call("minimumBid", "minimumBid(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_messageType)
    ]);

    return result[0].toBigInt();
  }

  try_minimumBid(_messageType: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minimumBid", "minimumBid(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_messageType)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nftContract(): Address {
    let result = super.call("nftContract", "nftContract():(address)", []);

    return result[0].toAddress();
  }

  try_nftContract(): ethereum.CallResult<Address> {
    let result = super.tryCall("nftContract", "nftContract():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  postIds(param0: BigInt): Bytes {
    let result = super.call("postIds", "postIds(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_postIds(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("postIds", "postIds(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  postMinimumBid(): BigInt {
    let result = super.call("postMinimumBid", "postMinimumBid():(uint256)", []);

    return result[0].toBigInt();
  }

  try_postMinimumBid(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "postMinimumBid",
      "postMinimumBid():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  postTipIds(param0: BigInt): Bytes {
    let result = super.call("postTipIds", "postTipIds(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_postTipIds(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("postTipIds", "postTipIds(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  postTips(param0: Bytes): AmaFansCore__postTipsResult {
    let result = super.call(
      "postTips",
      "postTips(bytes32):(address,uint256,uint256,bytes32)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new AmaFansCore__postTipsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBytes()
    );
  }

  try_postTips(
    param0: Bytes
  ): ethereum.CallResult<AmaFansCore__postTipsResult> {
    let result = super.tryCall(
      "postTips",
      "postTips(bytes32):(address,uint256,uint256,bytes32)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__postTipsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBytes()
      )
    );
  }

  posts(param0: Bytes): AmaFansCore__postsResult {
    let result = super.call(
      "posts",
      "posts(bytes32):(string,uint256,uint256,address,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new AmaFansCore__postsResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_posts(param0: Bytes): ethereum.CallResult<AmaFansCore__postsResult> {
    let result = super.tryCall(
      "posts",
      "posts(bytes32):(string,uint256,uint256,address,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__postsResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  privateMessageIds(param0: BigInt): Bytes {
    let result = super.call(
      "privateMessageIds",
      "privateMessageIds(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBytes();
  }

  try_privateMessageIds(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "privateMessageIds",
      "privateMessageIds(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  privateMinimumBid(): BigInt {
    let result = super.call(
      "privateMinimumBid",
      "privateMinimumBid():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_privateMinimumBid(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "privateMinimumBid",
      "privateMinimumBid():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  publicMessageIds(param0: BigInt): Bytes {
    let result = super.call(
      "publicMessageIds",
      "publicMessageIds(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBytes();
  }

  try_publicMessageIds(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "publicMessageIds",
      "publicMessageIds(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  publicMinimumBid(): BigInt {
    let result = super.call(
      "publicMinimumBid",
      "publicMinimumBid():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_publicMinimumBid(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "publicMinimumBid",
      "publicMinimumBid():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  recipientUpFront(): BigInt {
    let result = super.call(
      "recipientUpFront",
      "recipientUpFront():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_recipientUpFront(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "recipientUpFront",
      "recipientUpFront():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  thresholdFactorForSplit(): BigInt {
    let result = super.call(
      "thresholdFactorForSplit",
      "thresholdFactorForSplit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_thresholdFactorForSplit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "thresholdFactorForSplit",
      "thresholdFactorForSplit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tipIds(param0: BigInt): Bytes {
    let result = super.call("tipIds", "tipIds(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_tipIds(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("tipIds", "tipIds(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  tips(param0: Bytes): AmaFansCore__tipsResult {
    let result = super.call(
      "tips",
      "tips(bytes32):(address,uint256,uint256,bytes32,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new AmaFansCore__tipsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBytes(),
      result[4].toBoolean()
    );
  }

  try_tips(param0: Bytes): ethereum.CallResult<AmaFansCore__tipsResult> {
    let result = super.tryCall(
      "tips",
      "tips(bytes32):(address,uint256,uint256,bytes32,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__tipsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBytes(),
        value[4].toBoolean()
      )
    );
  }

  uri(_contentHash: string): string {
    let result = super.call("uri", "uri(string):(string)", [
      ethereum.Value.fromString(_contentHash)
    ]);

    return result[0].toString();
  }

  try_uri(_contentHash: string): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(string):(string)", [
      ethereum.Value.fromString(_contentHash)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  userBalance(): BigInt {
    let result = super.call("userBalance", "userBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_userBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("userBalance", "userBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userMinimumBid(
    _sender: Address,
    _recipient: Address,
    _messageType: BigInt
  ): BigInt {
    let result = super.call(
      "userMinimumBid",
      "userMinimumBid(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromUnsignedBigInt(_messageType)
      ]
    );

    return result[0].toBigInt();
  }

  try_userMinimumBid(
    _sender: Address,
    _recipient: Address,
    _messageType: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userMinimumBid",
      "userMinimumBid(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromUnsignedBigInt(_messageType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  users(param0: Address): AmaFansCore__usersResult {
    let result = super.call("users", "users(address):(uint256,uint256,bytes)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return new AmaFansCore__usersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBytes()
    );
  }

  try_users(param0: Address): ethereum.CallResult<AmaFansCore__usersResult> {
    let result = super.tryCall(
      "users",
      "users(address):(uint256,uint256,bytes)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__usersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBytes()
      )
    );
  }
}

export class BlockUserCall extends ethereum.Call {
  get inputs(): BlockUserCall__Inputs {
    return new BlockUserCall__Inputs(this);
  }

  get outputs(): BlockUserCall__Outputs {
    return new BlockUserCall__Outputs(this);
  }
}

export class BlockUserCall__Inputs {
  _call: BlockUserCall;

  constructor(call: BlockUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class BlockUserCall__Outputs {
  _call: BlockUserCall;

  constructor(call: BlockUserCall) {
    this._call = call;
  }
}

export class ClaimBackMessageValueCall extends ethereum.Call {
  get inputs(): ClaimBackMessageValueCall__Inputs {
    return new ClaimBackMessageValueCall__Inputs(this);
  }

  get outputs(): ClaimBackMessageValueCall__Outputs {
    return new ClaimBackMessageValueCall__Outputs(this);
  }
}

export class ClaimBackMessageValueCall__Inputs {
  _call: ClaimBackMessageValueCall;

  constructor(call: ClaimBackMessageValueCall) {
    this._call = call;
  }

  get messageId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ClaimBackMessageValueCall__Outputs {
  _call: ClaimBackMessageValueCall;

  constructor(call: ClaimBackMessageValueCall) {
    this._call = call;
  }
}

export class ClaimBackTipValueCall extends ethereum.Call {
  get inputs(): ClaimBackTipValueCall__Inputs {
    return new ClaimBackTipValueCall__Inputs(this);
  }

  get outputs(): ClaimBackTipValueCall__Outputs {
    return new ClaimBackTipValueCall__Outputs(this);
  }
}

export class ClaimBackTipValueCall__Inputs {
  _call: ClaimBackTipValueCall;

  constructor(call: ClaimBackTipValueCall) {
    this._call = call;
  }

  get tipId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ClaimBackTipValueCall__Outputs {
  _call: ClaimBackTipValueCall;

  constructor(call: ClaimBackTipValueCall) {
    this._call = call;
  }
}

export class CreateMessageCall extends ethereum.Call {
  get inputs(): CreateMessageCall__Inputs {
    return new CreateMessageCall__Inputs(this);
  }

  get outputs(): CreateMessageCall__Outputs {
    return new CreateMessageCall__Outputs(this);
  }
}

export class CreateMessageCall__Inputs {
  _call: CreateMessageCall;

  constructor(call: CreateMessageCall) {
    this._call = call;
  }

  get recipient_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get timelock_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get messageType_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get messageHash_(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CreateMessageCall__Outputs {
  _call: CreateMessageCall;

  constructor(call: CreateMessageCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreatePostCall extends ethereum.Call {
  get inputs(): CreatePostCall__Inputs {
    return new CreatePostCall__Inputs(this);
  }

  get outputs(): CreatePostCall__Outputs {
    return new CreatePostCall__Outputs(this);
  }
}

export class CreatePostCall__Inputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }

  get postHash_(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreatePostCall__Outputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreatePostTipCall extends ethereum.Call {
  get inputs(): CreatePostTipCall__Inputs {
    return new CreatePostTipCall__Inputs(this);
  }

  get outputs(): CreatePostTipCall__Outputs {
    return new CreatePostTipCall__Outputs(this);
  }
}

export class CreatePostTipCall__Inputs {
  _call: CreatePostTipCall;

  constructor(call: CreatePostTipCall) {
    this._call = call;
  }

  get postId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CreatePostTipCall__Outputs {
  _call: CreatePostTipCall;

  constructor(call: CreatePostTipCall) {
    this._call = call;
  }
}

export class CreateResponseCall extends ethereum.Call {
  get inputs(): CreateResponseCall__Inputs {
    return new CreateResponseCall__Inputs(this);
  }

  get outputs(): CreateResponseCall__Outputs {
    return new CreateResponseCall__Outputs(this);
  }
}

export class CreateResponseCall__Inputs {
  _call: CreateResponseCall;

  constructor(call: CreateResponseCall) {
    this._call = call;
  }

  get messageId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get answerHash_(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateResponseCall__Outputs {
  _call: CreateResponseCall;

  constructor(call: CreateResponseCall) {
    this._call = call;
  }
}

export class CreateTipCall extends ethereum.Call {
  get inputs(): CreateTipCall__Inputs {
    return new CreateTipCall__Inputs(this);
  }

  get outputs(): CreateTipCall__Outputs {
    return new CreateTipCall__Outputs(this);
  }
}

export class CreateTipCall__Inputs {
  _call: CreateTipCall;

  constructor(call: CreateTipCall) {
    this._call = call;
  }

  get messageId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CreateTipCall__Outputs {
  _call: CreateTipCall;

  constructor(call: CreateTipCall) {
    this._call = call;
  }
}

export class FollowUserCall extends ethereum.Call {
  get inputs(): FollowUserCall__Inputs {
    return new FollowUserCall__Inputs(this);
  }

  get outputs(): FollowUserCall__Outputs {
    return new FollowUserCall__Outputs(this);
  }
}

export class FollowUserCall__Inputs {
  _call: FollowUserCall;

  constructor(call: FollowUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class FollowUserCall__Outputs {
  _call: FollowUserCall;

  constructor(call: FollowUserCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _minimumBid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _postMinimumBid(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _feeNumerator(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _nftContract(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _feeCollector(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _adminAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get trustedForwarder(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _baseURI(): string {
    return this._call.inputValues[7].value.toString();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MarkReponseCall extends ethereum.Call {
  get inputs(): MarkReponseCall__Inputs {
    return new MarkReponseCall__Inputs(this);
  }

  get outputs(): MarkReponseCall__Outputs {
    return new MarkReponseCall__Outputs(this);
  }
}

export class MarkReponseCall__Inputs {
  _call: MarkReponseCall;

  constructor(call: MarkReponseCall) {
    this._call = call;
  }

  get messageId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get responseType_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MarkReponseCall__Outputs {
  _call: MarkReponseCall;

  constructor(call: MarkReponseCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetBaseURICall extends ethereum.Call {
  get inputs(): SetBaseURICall__Inputs {
    return new SetBaseURICall__Inputs(this);
  }

  get outputs(): SetBaseURICall__Outputs {
    return new SetBaseURICall__Outputs(this);
  }
}

export class SetBaseURICall__Inputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }

  get _baseURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseURICall__Outputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }
}

export class SetMinimumBidCall extends ethereum.Call {
  get inputs(): SetMinimumBidCall__Inputs {
    return new SetMinimumBidCall__Inputs(this);
  }

  get outputs(): SetMinimumBidCall__Outputs {
    return new SetMinimumBidCall__Outputs(this);
  }
}

export class SetMinimumBidCall__Inputs {
  _call: SetMinimumBidCall;

  constructor(call: SetMinimumBidCall) {
    this._call = call;
  }

  get _minimumBid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _messageType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetMinimumBidCall__Outputs {
  _call: SetMinimumBidCall;

  constructor(call: SetMinimumBidCall) {
    this._call = call;
  }
}

export class SetNFTContractCall extends ethereum.Call {
  get inputs(): SetNFTContractCall__Inputs {
    return new SetNFTContractCall__Inputs(this);
  }

  get outputs(): SetNFTContractCall__Outputs {
    return new SetNFTContractCall__Outputs(this);
  }
}

export class SetNFTContractCall__Inputs {
  _call: SetNFTContractCall;

  constructor(call: SetNFTContractCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNFTContractCall__Outputs {
  _call: SetNFTContractCall;

  constructor(call: SetNFTContractCall) {
    this._call = call;
  }
}

export class SetPostMinimumBidCall extends ethereum.Call {
  get inputs(): SetPostMinimumBidCall__Inputs {
    return new SetPostMinimumBidCall__Inputs(this);
  }

  get outputs(): SetPostMinimumBidCall__Outputs {
    return new SetPostMinimumBidCall__Outputs(this);
  }
}

export class SetPostMinimumBidCall__Inputs {
  _call: SetPostMinimumBidCall;

  constructor(call: SetPostMinimumBidCall) {
    this._call = call;
  }

  get _postMinimumBid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPostMinimumBidCall__Outputs {
  _call: SetPostMinimumBidCall;

  constructor(call: SetPostMinimumBidCall) {
    this._call = call;
  }
}

export class SetRecipientUpFrontCall extends ethereum.Call {
  get inputs(): SetRecipientUpFrontCall__Inputs {
    return new SetRecipientUpFrontCall__Inputs(this);
  }

  get outputs(): SetRecipientUpFrontCall__Outputs {
    return new SetRecipientUpFrontCall__Outputs(this);
  }
}

export class SetRecipientUpFrontCall__Inputs {
  _call: SetRecipientUpFrontCall;

  constructor(call: SetRecipientUpFrontCall) {
    this._call = call;
  }

  get _recipientUpFront(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRecipientUpFrontCall__Outputs {
  _call: SetRecipientUpFrontCall;

  constructor(call: SetRecipientUpFrontCall) {
    this._call = call;
  }
}

export class SetThresholdFactorForSplitCall extends ethereum.Call {
  get inputs(): SetThresholdFactorForSplitCall__Inputs {
    return new SetThresholdFactorForSplitCall__Inputs(this);
  }

  get outputs(): SetThresholdFactorForSplitCall__Outputs {
    return new SetThresholdFactorForSplitCall__Outputs(this);
  }
}

export class SetThresholdFactorForSplitCall__Inputs {
  _call: SetThresholdFactorForSplitCall;

  constructor(call: SetThresholdFactorForSplitCall) {
    this._call = call;
  }

  get _thresholdFactorForSplit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetThresholdFactorForSplitCall__Outputs {
  _call: SetThresholdFactorForSplitCall;

  constructor(call: SetThresholdFactorForSplitCall) {
    this._call = call;
  }
}

export class SetTrustedForwarderCall extends ethereum.Call {
  get inputs(): SetTrustedForwarderCall__Inputs {
    return new SetTrustedForwarderCall__Inputs(this);
  }

  get outputs(): SetTrustedForwarderCall__Outputs {
    return new SetTrustedForwarderCall__Outputs(this);
  }
}

export class SetTrustedForwarderCall__Inputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }

  get _forwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTrustedForwarderCall__Outputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }
}

export class SetUserMinimumBidCall extends ethereum.Call {
  get inputs(): SetUserMinimumBidCall__Inputs {
    return new SetUserMinimumBidCall__Inputs(this);
  }

  get outputs(): SetUserMinimumBidCall__Outputs {
    return new SetUserMinimumBidCall__Outputs(this);
  }
}

export class SetUserMinimumBidCall__Inputs {
  _call: SetUserMinimumBidCall;

  constructor(call: SetUserMinimumBidCall) {
    this._call = call;
  }

  get minimumBidByUser(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _messageType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetUserMinimumBidCall__Outputs {
  _call: SetUserMinimumBidCall;

  constructor(call: SetUserMinimumBidCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get amount_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }
}

export class TransferPostCall extends ethereum.Call {
  get inputs(): TransferPostCall__Inputs {
    return new TransferPostCall__Inputs(this);
  }

  get outputs(): TransferPostCall__Outputs {
    return new TransferPostCall__Outputs(this);
  }
}

export class TransferPostCall__Inputs {
  _call: TransferPostCall;

  constructor(call: TransferPostCall) {
    this._call = call;
  }

  get postId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get transferTo_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferPostCall__Outputs {
  _call: TransferPostCall;

  constructor(call: TransferPostCall) {
    this._call = call;
  }
}

export class UnBlockUserCall extends ethereum.Call {
  get inputs(): UnBlockUserCall__Inputs {
    return new UnBlockUserCall__Inputs(this);
  }

  get outputs(): UnBlockUserCall__Outputs {
    return new UnBlockUserCall__Outputs(this);
  }
}

export class UnBlockUserCall__Inputs {
  _call: UnBlockUserCall;

  constructor(call: UnBlockUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnBlockUserCall__Outputs {
  _call: UnBlockUserCall;

  constructor(call: UnBlockUserCall) {
    this._call = call;
  }
}

export class UnWhitelistUserCall extends ethereum.Call {
  get inputs(): UnWhitelistUserCall__Inputs {
    return new UnWhitelistUserCall__Inputs(this);
  }

  get outputs(): UnWhitelistUserCall__Outputs {
    return new UnWhitelistUserCall__Outputs(this);
  }
}

export class UnWhitelistUserCall__Inputs {
  _call: UnWhitelistUserCall;

  constructor(call: UnWhitelistUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnWhitelistUserCall__Outputs {
  _call: UnWhitelistUserCall;

  constructor(call: UnWhitelistUserCall) {
    this._call = call;
  }
}

export class UnfollowUserCall extends ethereum.Call {
  get inputs(): UnfollowUserCall__Inputs {
    return new UnfollowUserCall__Inputs(this);
  }

  get outputs(): UnfollowUserCall__Outputs {
    return new UnfollowUserCall__Outputs(this);
  }
}

export class UnfollowUserCall__Inputs {
  _call: UnfollowUserCall;

  constructor(call: UnfollowUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnfollowUserCall__Outputs {
  _call: UnfollowUserCall;

  constructor(call: UnfollowUserCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WhitelistUserCall extends ethereum.Call {
  get inputs(): WhitelistUserCall__Inputs {
    return new WhitelistUserCall__Inputs(this);
  }

  get outputs(): WhitelistUserCall__Outputs {
    return new WhitelistUserCall__Outputs(this);
  }
}

export class WhitelistUserCall__Inputs {
  _call: WhitelistUserCall;

  constructor(call: WhitelistUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistUserCall__Outputs {
  _call: WhitelistUserCall;

  constructor(call: WhitelistUserCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
