// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AmountReceived extends ethereum.Event {
  get params(): AmountReceived__Params {
    return new AmountReceived__Params(this);
  }
}

export class AmountReceived__Params {
  _event: AmountReceived;

  constructor(event: AmountReceived) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Blocked extends ethereum.Event {
  get params(): Blocked__Params {
    return new Blocked__Params(this);
  }
}

export class Blocked__Params {
  _event: Blocked;

  constructor(event: Blocked) {
    this._event = event;
  }

  get blocker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get blocked(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Follow extends ethereum.Event {
  get params(): Follow__Params {
    return new Follow__Params(this);
  }
}

export class Follow__Params {
  _event: Follow;

  constructor(event: Follow) {
    this._event = event;
  }

  get followed(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get follower(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class QuestionAnswered extends ethereum.Event {
  get params(): QuestionAnswered__Params {
    return new QuestionAnswered__Params(this);
  }
}

export class QuestionAnswered__Params {
  _event: QuestionAnswered;

  constructor(event: QuestionAnswered) {
    this._event = event;
  }

  get questionId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get answerLink(): string {
    return this._event.parameters[3].value.toString();
  }

  get tokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class QuestionCreated extends ethereum.Event {
  get params(): QuestionCreated__Params {
    return new QuestionCreated__Params(this);
  }
}

export class QuestionCreated__Params {
  _event: QuestionCreated;

  constructor(event: QuestionCreated) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get questionId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get expiryTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get link(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class QuestionValueClaimed extends ethereum.Event {
  get params(): QuestionValueClaimed__Params {
    return new QuestionValueClaimed__Params(this);
  }
}

export class QuestionValueClaimed__Params {
  _event: QuestionValueClaimed;

  constructor(event: QuestionValueClaimed) {
    this._event = event;
  }

  get questionId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TipCreated extends ethereum.Event {
  get params(): TipCreated__Params {
    return new TipCreated__Params(this);
  }
}

export class TipCreated__Params {
  _event: TipCreated;

  constructor(event: TipCreated) {
    this._event = event;
  }

  get questionId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get tipId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TipValueClaimed extends ethereum.Event {
  get params(): TipValueClaimed__Params {
    return new TipValueClaimed__Params(this);
  }
}

export class TipValueClaimed__Params {
  _event: TipValueClaimed;

  constructor(event: TipValueClaimed) {
    this._event = event;
  }

  get questionId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get tipId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get createdBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UnBlock extends ethereum.Event {
  get params(): UnBlock__Params {
    return new UnBlock__Params(this);
  }
}

export class UnBlock__Params {
  _event: UnBlock;

  constructor(event: UnBlock) {
    this._event = event;
  }

  get unblocker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unblocked(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UnFollow extends ethereum.Event {
  get params(): UnFollow__Params {
    return new UnFollow__Params(this);
  }
}

export class UnFollow__Params {
  _event: UnFollow;

  constructor(event: UnFollow) {
    this._event = event;
  }

  get unfollowed(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unfollower(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UnWhitelisted extends ethereum.Event {
  get params(): UnWhitelisted__Params {
    return new UnWhitelisted__Params(this);
  }
}

export class UnWhitelisted__Params {
  _event: UnWhitelisted;

  constructor(event: UnWhitelisted) {
    this._event = event;
  }

  get unwhitelister(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unwhitelisted(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Whitelisted extends ethereum.Event {
  get params(): Whitelisted__Params {
    return new Whitelisted__Params(this);
  }
}

export class Whitelisted__Params {
  _event: Whitelisted;

  constructor(event: Whitelisted) {
    this._event = event;
  }

  get whitelister(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get whitelisted(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AmaFansCore__getQuestionTipIdsResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__getUserQuestionIdsResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__getUserTipIdsResult {
  value0: Array<Bytes>;
  value1: BigInt;

  constructor(value0: Array<Bytes>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytesArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AmaFansCore__questionsResult {
  value0: string;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: Address;
  value5: Address;
  value6: BigInt;
  value7: BigInt;
  value8: i32;
  value9: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: BigInt,
    value3: BigInt,
    value4: Address,
    value5: Address,
    value6: BigInt,
    value7: BigInt,
    value8: i32,
    value9: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8))
    );
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    return map;
  }
}

export class AmaFansCore__tipsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: Bytes;
  value4: boolean;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: Bytes,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromFixedBytes(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }
}

export class AmaFansCore extends ethereum.SmartContract {
  static bind(address: Address): AmaFansCore {
    return new AmaFansCore("AmaFansCore", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GOVERNANCE_ROLE(): Bytes {
    let result = super.call(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_GOVERNANCE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ZERO_BYTES32(): Bytes {
    let result = super.call("ZERO_BYTES32", "ZERO_BYTES32():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ZERO_BYTES32(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ZERO_BYTES32", "ZERO_BYTES32():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  balance(): BigInt {
    let result = super.call("balance", "balance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_balance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balance", "balance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  blockList(param0: Address, param1: Address): boolean {
    let result = super.call("blockList", "blockList(address,address):(bool)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBoolean();
  }

  try_blockList(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "blockList",
      "blockList(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkWhitelist(_sender: Address, _recipient: Address): boolean {
    let result = super.call(
      "checkWhitelist",
      "checkWhitelist(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient)
      ]
    );

    return result[0].toBoolean();
  }

  try_checkWhitelist(
    _sender: Address,
    _recipient: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkWhitelist",
      "checkWhitelist(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  defaultQuestionTimeLimit(): BigInt {
    let result = super.call(
      "defaultQuestionTimeLimit",
      "defaultQuestionTimeLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_defaultQuestionTimeLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultQuestionTimeLimit",
      "defaultQuestionTimeLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeCollector(): Address {
    let result = super.call("feeCollector", "feeCollector():(address)", []);

    return result[0].toAddress();
  }

  try_feeCollector(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeCollector", "feeCollector():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeNumerator(): BigInt {
    let result = super.call("feeNumerator", "feeNumerator():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feeNumerator(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("feeNumerator", "feeNumerator():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getQuestionTipIds(
    _questionId: Bytes,
    skip: BigInt,
    limit: BigInt
  ): AmaFansCore__getQuestionTipIdsResult {
    let result = super.call(
      "getQuestionTipIds",
      "getQuestionTipIds(bytes32,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromFixedBytes(_questionId),
        ethereum.Value.fromUnsignedBigInt(skip),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );

    return new AmaFansCore__getQuestionTipIdsResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_getQuestionTipIds(
    _questionId: Bytes,
    skip: BigInt,
    limit: BigInt
  ): ethereum.CallResult<AmaFansCore__getQuestionTipIdsResult> {
    let result = super.tryCall(
      "getQuestionTipIds",
      "getQuestionTipIds(bytes32,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromFixedBytes(_questionId),
        ethereum.Value.fromUnsignedBigInt(skip),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__getQuestionTipIdsResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserQuestionIds(
    _address: Address,
    skip: BigInt,
    limit: BigInt
  ): AmaFansCore__getUserQuestionIdsResult {
    let result = super.call(
      "getUserQuestionIds",
      "getUserQuestionIds(address,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(skip),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );

    return new AmaFansCore__getUserQuestionIdsResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_getUserQuestionIds(
    _address: Address,
    skip: BigInt,
    limit: BigInt
  ): ethereum.CallResult<AmaFansCore__getUserQuestionIdsResult> {
    let result = super.tryCall(
      "getUserQuestionIds",
      "getUserQuestionIds(address,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(skip),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__getUserQuestionIdsResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  getUserQuestionIdsLength(_address: Address): BigInt {
    let result = super.call(
      "getUserQuestionIdsLength",
      "getUserQuestionIdsLength(address):(uint256)",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBigInt();
  }

  try_getUserQuestionIdsLength(_address: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserQuestionIdsLength",
      "getUserQuestionIdsLength(address):(uint256)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserTipIds(
    _address: Address,
    skip: BigInt,
    limit: BigInt
  ): AmaFansCore__getUserTipIdsResult {
    let result = super.call(
      "getUserTipIds",
      "getUserTipIds(address,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(skip),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );

    return new AmaFansCore__getUserTipIdsResult(
      result[0].toBytesArray(),
      result[1].toBigInt()
    );
  }

  try_getUserTipIds(
    _address: Address,
    skip: BigInt,
    limit: BigInt
  ): ethereum.CallResult<AmaFansCore__getUserTipIdsResult> {
    let result = super.tryCall(
      "getUserTipIds",
      "getUserTipIds(address,uint256,uint256):(bytes32[],uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(skip),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__getUserTipIdsResult(
        value[0].toBytesArray(),
        value[1].toBigInt()
      )
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxExtendLimit(): BigInt {
    let result = super.call("maxExtendLimit", "maxExtendLimit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxExtendLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxExtendLimit",
      "maxExtendLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minTimeLock(): BigInt {
    let result = super.call("minTimeLock", "minTimeLock():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minTimeLock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minTimeLock", "minTimeLock():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minimumBid(): BigInt {
    let result = super.call("minimumBid", "minimumBid():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minimumBid(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minimumBid", "minimumBid():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nftContract(): Address {
    let result = super.call("nftContract", "nftContract():(address)", []);

    return result[0].toAddress();
  }

  try_nftContract(): ethereum.CallResult<Address> {
    let result = super.tryCall("nftContract", "nftContract():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  questions(param0: Bytes): AmaFansCore__questionsResult {
    let result = super.call(
      "questions",
      "questions(bytes32):(string,string,uint256,uint256,address,address,uint256,uint256,uint8,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new AmaFansCore__questionsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toAddress(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toI32(),
      result[9].toBigInt()
    );
  }

  try_questions(
    param0: Bytes
  ): ethereum.CallResult<AmaFansCore__questionsResult> {
    let result = super.tryCall(
      "questions",
      "questions(bytes32):(string,string,uint256,uint256,address,address,uint256,uint256,uint8,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__questionsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toAddress(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toI32(),
        value[9].toBigInt()
      )
    );
  }

  recipientUpFront(): BigInt {
    let result = super.call(
      "recipientUpFront",
      "recipientUpFront():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_recipientUpFront(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "recipientUpFront",
      "recipientUpFront():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  thresholdFactorForSplit(): BigInt {
    let result = super.call(
      "thresholdFactorForSplit",
      "thresholdFactorForSplit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_thresholdFactorForSplit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "thresholdFactorForSplit",
      "thresholdFactorForSplit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tips(param0: Bytes): AmaFansCore__tipsResult {
    let result = super.call(
      "tips",
      "tips(bytes32):(address,uint256,uint256,bytes32,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new AmaFansCore__tipsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBytes(),
      result[4].toBoolean()
    );
  }

  try_tips(param0: Bytes): ethereum.CallResult<AmaFansCore__tipsResult> {
    let result = super.tryCall(
      "tips",
      "tips(bytes32):(address,uint256,uint256,bytes32,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AmaFansCore__tipsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBytes(),
        value[4].toBoolean()
      )
    );
  }

  userBalance(): BigInt {
    let result = super.call("userBalance", "userBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_userBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("userBalance", "userBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userMinimumBid(_sender: Address, _recipient: Address): BigInt {
    let result = super.call(
      "userMinimumBid",
      "userMinimumBid(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient)
      ]
    );

    return result[0].toBigInt();
  }

  try_userMinimumBid(
    _sender: Address,
    _recipient: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userMinimumBid",
      "userMinimumBid(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_recipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class BlockUserCall extends ethereum.Call {
  get inputs(): BlockUserCall__Inputs {
    return new BlockUserCall__Inputs(this);
  }

  get outputs(): BlockUserCall__Outputs {
    return new BlockUserCall__Outputs(this);
  }
}

export class BlockUserCall__Inputs {
  _call: BlockUserCall;

  constructor(call: BlockUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class BlockUserCall__Outputs {
  _call: BlockUserCall;

  constructor(call: BlockUserCall) {
    this._call = call;
  }
}

export class ClaimBackQuestionValueCall extends ethereum.Call {
  get inputs(): ClaimBackQuestionValueCall__Inputs {
    return new ClaimBackQuestionValueCall__Inputs(this);
  }

  get outputs(): ClaimBackQuestionValueCall__Outputs {
    return new ClaimBackQuestionValueCall__Outputs(this);
  }
}

export class ClaimBackQuestionValueCall__Inputs {
  _call: ClaimBackQuestionValueCall;

  constructor(call: ClaimBackQuestionValueCall) {
    this._call = call;
  }

  get questionId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ClaimBackQuestionValueCall__Outputs {
  _call: ClaimBackQuestionValueCall;

  constructor(call: ClaimBackQuestionValueCall) {
    this._call = call;
  }
}

export class ClaimBackTipValueCall extends ethereum.Call {
  get inputs(): ClaimBackTipValueCall__Inputs {
    return new ClaimBackTipValueCall__Inputs(this);
  }

  get outputs(): ClaimBackTipValueCall__Outputs {
    return new ClaimBackTipValueCall__Outputs(this);
  }
}

export class ClaimBackTipValueCall__Inputs {
  _call: ClaimBackTipValueCall;

  constructor(call: ClaimBackTipValueCall) {
    this._call = call;
  }

  get tipId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ClaimBackTipValueCall__Outputs {
  _call: ClaimBackTipValueCall;

  constructor(call: ClaimBackTipValueCall) {
    this._call = call;
  }
}

export class CreateAnswerCall extends ethereum.Call {
  get inputs(): CreateAnswerCall__Inputs {
    return new CreateAnswerCall__Inputs(this);
  }

  get outputs(): CreateAnswerCall__Outputs {
    return new CreateAnswerCall__Outputs(this);
  }
}

export class CreateAnswerCall__Inputs {
  _call: CreateAnswerCall;

  constructor(call: CreateAnswerCall) {
    this._call = call;
  }

  get questionId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get answerLink_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get tokenURI_(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateAnswerCall__Outputs {
  _call: CreateAnswerCall;

  constructor(call: CreateAnswerCall) {
    this._call = call;
  }
}

export class CreateQuestionCall extends ethereum.Call {
  get inputs(): CreateQuestionCall__Inputs {
    return new CreateQuestionCall__Inputs(this);
  }

  get outputs(): CreateQuestionCall__Outputs {
    return new CreateQuestionCall__Outputs(this);
  }
}

export class CreateQuestionCall__Inputs {
  _call: CreateQuestionCall;

  constructor(call: CreateQuestionCall) {
    this._call = call;
  }

  get recipient_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get timelock_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get questionLink_(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateQuestionCall__Outputs {
  _call: CreateQuestionCall;

  constructor(call: CreateQuestionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateTipCall extends ethereum.Call {
  get inputs(): CreateTipCall__Inputs {
    return new CreateTipCall__Inputs(this);
  }

  get outputs(): CreateTipCall__Outputs {
    return new CreateTipCall__Outputs(this);
  }
}

export class CreateTipCall__Inputs {
  _call: CreateTipCall;

  constructor(call: CreateTipCall) {
    this._call = call;
  }

  get questionId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CreateTipCall__Outputs {
  _call: CreateTipCall;

  constructor(call: CreateTipCall) {
    this._call = call;
  }
}

export class FollowUserCall extends ethereum.Call {
  get inputs(): FollowUserCall__Inputs {
    return new FollowUserCall__Inputs(this);
  }

  get outputs(): FollowUserCall__Outputs {
    return new FollowUserCall__Outputs(this);
  }
}

export class FollowUserCall__Inputs {
  _call: FollowUserCall;

  constructor(call: FollowUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class FollowUserCall__Outputs {
  _call: FollowUserCall;

  constructor(call: FollowUserCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _minimumBid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _feeNumerator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _nftContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _feeCollector(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _adminAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get trustedForwarder(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetMinimumBidCall extends ethereum.Call {
  get inputs(): SetMinimumBidCall__Inputs {
    return new SetMinimumBidCall__Inputs(this);
  }

  get outputs(): SetMinimumBidCall__Outputs {
    return new SetMinimumBidCall__Outputs(this);
  }
}

export class SetMinimumBidCall__Inputs {
  _call: SetMinimumBidCall;

  constructor(call: SetMinimumBidCall) {
    this._call = call;
  }

  get _minimumBid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumBidCall__Outputs {
  _call: SetMinimumBidCall;

  constructor(call: SetMinimumBidCall) {
    this._call = call;
  }
}

export class SetRecipientUpFrontCall extends ethereum.Call {
  get inputs(): SetRecipientUpFrontCall__Inputs {
    return new SetRecipientUpFrontCall__Inputs(this);
  }

  get outputs(): SetRecipientUpFrontCall__Outputs {
    return new SetRecipientUpFrontCall__Outputs(this);
  }
}

export class SetRecipientUpFrontCall__Inputs {
  _call: SetRecipientUpFrontCall;

  constructor(call: SetRecipientUpFrontCall) {
    this._call = call;
  }

  get _recipientUpFront(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRecipientUpFrontCall__Outputs {
  _call: SetRecipientUpFrontCall;

  constructor(call: SetRecipientUpFrontCall) {
    this._call = call;
  }
}

export class SetThresholdFactorForSplitCall extends ethereum.Call {
  get inputs(): SetThresholdFactorForSplitCall__Inputs {
    return new SetThresholdFactorForSplitCall__Inputs(this);
  }

  get outputs(): SetThresholdFactorForSplitCall__Outputs {
    return new SetThresholdFactorForSplitCall__Outputs(this);
  }
}

export class SetThresholdFactorForSplitCall__Inputs {
  _call: SetThresholdFactorForSplitCall;

  constructor(call: SetThresholdFactorForSplitCall) {
    this._call = call;
  }

  get _thresholdFactorForSplit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetThresholdFactorForSplitCall__Outputs {
  _call: SetThresholdFactorForSplitCall;

  constructor(call: SetThresholdFactorForSplitCall) {
    this._call = call;
  }
}

export class SetTrustedForwarderCall extends ethereum.Call {
  get inputs(): SetTrustedForwarderCall__Inputs {
    return new SetTrustedForwarderCall__Inputs(this);
  }

  get outputs(): SetTrustedForwarderCall__Outputs {
    return new SetTrustedForwarderCall__Outputs(this);
  }
}

export class SetTrustedForwarderCall__Inputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }

  get _forwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTrustedForwarderCall__Outputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }
}

export class SetUserMinimumBidCall extends ethereum.Call {
  get inputs(): SetUserMinimumBidCall__Inputs {
    return new SetUserMinimumBidCall__Inputs(this);
  }

  get outputs(): SetUserMinimumBidCall__Outputs {
    return new SetUserMinimumBidCall__Outputs(this);
  }
}

export class SetUserMinimumBidCall__Inputs {
  _call: SetUserMinimumBidCall;

  constructor(call: SetUserMinimumBidCall) {
    this._call = call;
  }

  get minimumBidByUser(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetUserMinimumBidCall__Outputs {
  _call: SetUserMinimumBidCall;

  constructor(call: SetUserMinimumBidCall) {
    this._call = call;
  }
}

export class SetdefaultQuestionTimeLimitCall extends ethereum.Call {
  get inputs(): SetdefaultQuestionTimeLimitCall__Inputs {
    return new SetdefaultQuestionTimeLimitCall__Inputs(this);
  }

  get outputs(): SetdefaultQuestionTimeLimitCall__Outputs {
    return new SetdefaultQuestionTimeLimitCall__Outputs(this);
  }
}

export class SetdefaultQuestionTimeLimitCall__Inputs {
  _call: SetdefaultQuestionTimeLimitCall;

  constructor(call: SetdefaultQuestionTimeLimitCall) {
    this._call = call;
  }

  get _defaultQuestionTimeLimit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetdefaultQuestionTimeLimitCall__Outputs {
  _call: SetdefaultQuestionTimeLimitCall;

  constructor(call: SetdefaultQuestionTimeLimitCall) {
    this._call = call;
  }
}

export class UnBlockUserCall extends ethereum.Call {
  get inputs(): UnBlockUserCall__Inputs {
    return new UnBlockUserCall__Inputs(this);
  }

  get outputs(): UnBlockUserCall__Outputs {
    return new UnBlockUserCall__Outputs(this);
  }
}

export class UnBlockUserCall__Inputs {
  _call: UnBlockUserCall;

  constructor(call: UnBlockUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnBlockUserCall__Outputs {
  _call: UnBlockUserCall;

  constructor(call: UnBlockUserCall) {
    this._call = call;
  }
}

export class UnWhitelistUserCall extends ethereum.Call {
  get inputs(): UnWhitelistUserCall__Inputs {
    return new UnWhitelistUserCall__Inputs(this);
  }

  get outputs(): UnWhitelistUserCall__Outputs {
    return new UnWhitelistUserCall__Outputs(this);
  }
}

export class UnWhitelistUserCall__Inputs {
  _call: UnWhitelistUserCall;

  constructor(call: UnWhitelistUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnWhitelistUserCall__Outputs {
  _call: UnWhitelistUserCall;

  constructor(call: UnWhitelistUserCall) {
    this._call = call;
  }
}

export class UnfollowUserCall extends ethereum.Call {
  get inputs(): UnfollowUserCall__Inputs {
    return new UnfollowUserCall__Inputs(this);
  }

  get outputs(): UnfollowUserCall__Outputs {
    return new UnfollowUserCall__Outputs(this);
  }
}

export class UnfollowUserCall__Inputs {
  _call: UnfollowUserCall;

  constructor(call: UnfollowUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnfollowUserCall__Outputs {
  _call: UnfollowUserCall;

  constructor(call: UnfollowUserCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WhitelistUserCall extends ethereum.Call {
  get inputs(): WhitelistUserCall__Inputs {
    return new WhitelistUserCall__Inputs(this);
  }

  get outputs(): WhitelistUserCall__Outputs {
    return new WhitelistUserCall__Outputs(this);
  }
}

export class WhitelistUserCall__Inputs {
  _call: WhitelistUserCall;

  constructor(call: WhitelistUserCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistUserCall__Outputs {
  _call: WhitelistUserCall;

  constructor(call: WhitelistUserCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
