type ExampleEntity @entity {
  id: ID!
  count: BigInt!
  sender: Bytes! 
  value: BigInt! 
}


type AmaUserEntity @entity {
  id: ID!
  txHash: String!
  questionsCreated: BigInt!
  tipsCreated: BigInt!
  answersCreated: BigInt!
  blockUserCreated: BigInt!
  following: BigInt!
  whitelistUserCreated: BigInt!
  junkResponseCreated: BigInt!

  questionsReceived: BigInt!
  answersReceived: BigInt!
  blockUserReceived: BigInt!
  junkResponseReceived: BigInt!

  followers: BigInt!
  whitelistUserReceived: BigInt!



  valueSpentOnQuestions: BigInt!
  valueSpentOnTips: BigInt!


  valueReceivedOnQuestions: BigInt!

  "The value which you get when you answer a question"
  valueReceivedOnAnswers: BigInt!

  "The aggragte value in tips which your questions have received" 
  valueReceivedOnTips: BigInt!


  questionsClaimedBack: BigInt!
  tipsClaimedBack: BigInt!

  questionsValueClaimedBack: BigInt!
  tipsValueClaimedBack: BigInt!

  address: String!
  twitterId: BigInt
  createdAt: BigInt!
  earningsWithdrawn: BigInt! 
  twitterUsername: String

}



type DomainRegisteredEntity @entity {
  id: ID!
  useraddress: String! 
  nodeHash: Bytes! # bytes32
  twitterId: BigInt! 
  twitterUsername: String 
  label: String! 
  createdAt: BigInt!
}


type RequestErroredEntity @entity {
  id: ID!
  useraddress: String! 
  data: Bytes! # bytes

}

type RequestFulfilledEntity @entity {
  id: ID!
  useraddress: String! 
  data: Bytes! # bytes
}





type QuestionCreatedEntity @entity {
  id: ID!
  txHash: String!
  recipient: String!
  questionId: Bytes! 
  createdBy: String!
  answerLink: String!
  value: BigInt!
  expiryTime: BigInt!
  link: String! 
  answered: Boolean
  claimed: Boolean
  junkResponse: Boolean
  createdAt: BigInt!
  tips: BigInt!
  tipsTotalValue: BigInt!
}


type QuestionAnsweredEntity @entity {
  id: ID!
  txHash: String!
  questionId: Bytes! 
  owner: String! 
  creator: String! 
  tokenId: BigInt! 
  answerLink: String! 
  value: BigInt! 
  createdAt: BigInt!
}


type QuestionValueClaimedEntity @entity {
  id: ID!
  txHash: String!
  questionId: Bytes! 
  createdBy: String! 
  value: BigInt! 
  createdAt: BigInt!
}


type TipCreatedEntity @entity {
  id: ID!
  txHash: String!
  questionId: Bytes! 
  tipId: Bytes! 
  createdBy: String! 
  value: BigInt! 
  claimed: Boolean
  createdAt: BigInt!
}


type TipValueClaimedEntity @entity {
  id: ID!
  txHash: String!
  questionId: Bytes! # bytes32
  tipId: Bytes! # bytes32
  createdBy: String! 
  value: BigInt! 
  createdAt: BigInt!
}


type AmountReceivedEntity @entity {
  id: ID!
  txHash: String!
  sender: String! 
  value: BigInt! 
  createdAt: BigInt!
}


type BlockedEntity @entity {
  id: ID!
  txHash: String!
  sender: String! 
  receiver: String!
  createdAt: BigInt!
}

type UnBlockedEntity @entity {
  id: ID!
  txHash: String!
  sender: String! 
  receiver: String!
  createdAt: BigInt!
}



type WhitelistedEntity @entity {
  id: ID!
  txHash: String!
  sender: String! 
  receiver: String!
  createdAt: BigInt!
}
type UnWhitelistedEntity @entity {
  id: ID!
  txHash: String!
  sender: String! 
  receiver: String!
  createdAt: BigInt!
}


type FollowEntity @entity {
  id: ID!
  txHash: String!
  follower: String! 
  followed: String!
  createdAt: BigInt!
}
type UnFollowEntity @entity {
  id: ID!
  txHash: String!
  unFollower: String! 
  unFollowed: String!
  createdAt: BigInt!
}

type WithdrawEntity @entity {
  id: ID!
  txHash: String!
  user: String!
  value: BigInt!
  createdAt: BigInt!
}

type JunkResponseEntity @entity {
  id: ID!
  txHash: String!
  questionId: Bytes!
  owner: String!
  answerer: String!
  createdAt: BigInt!
}

type PlatformIdentity @entity {
  id: ID!
  txHash: String!
  totalValueSpentOnQuestions: BigInt!
  totalValueSpentOnTips: BigInt!
  totalValueClaimedBackOnTips: BigInt!
  totalValueClaimedBackOnQuestions: BigInt!


  totalValueReceivedOnAnswers: BigInt!
  totalQuestionsAsked: BigInt!
  totalQuestionsClaimedBack: BigInt!
  totalTipsClaimedBack: BigInt!

  totalQuestionsAnswered: BigInt!
  totalTipsMade: BigInt!
  totalUsers: BigInt!
}