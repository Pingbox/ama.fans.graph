type ExampleEntity @entity {
  id: ID!
  count: BigInt!
  sender: String! 
  value: BigInt! 
}


type AmaUserEntity @entity {
  id: ID!
  txHash: String!
  fiatUser: Boolean
  messagesCreated: BigInt!
  donationAddress: String!

  tipsCreated: BigInt!
  postTipsCreated: BigInt!
  responsesCreated: BigInt!
  blockUserCreated: BigInt!
  following: BigInt!
  whitelistUserCreated: BigInt!

  "Rating responses received"
  oneStarResponse: BigInt!
  twoStarResponse: BigInt!
  threeStarResponse: BigInt!
  fourStarResponse: BigInt!
  fiveStarResponse: BigInt!

  validations: [String!]

  messagesReceived: BigInt!
  responsesReceived: BigInt!
  blockUserReceived: BigInt!
  goodResponseReceived: BigInt!
  badResponseReceived: BigInt!

  followers: BigInt!
  whitelistUserReceived: BigInt!




  "The aggragte value which a user has spent on creating messages" 
  valueSpentOnMessages: BigInt!

  "The aggragte value in tips which a user has spent on tipping on messages" 
  valueSpentOnTips: BigInt!



  "The value which you get when you answer a question"
  valueReceivedOnResponses: BigInt!

  "The aggragte value in tips which your Messages have received" 
  valueReceivedOnTips: BigInt!



  messagesClaimedBack: BigInt!
  tipsClaimedBack: BigInt!

  messagesValueClaimedBack: BigInt!
  tipsValueClaimedBack: BigInt!

  address: String!
  createdAt: BigInt!
  earningsWithdrawn: BigInt! 

}




type MessageCreatedEntity @entity {
  id: ID!
  txHash: String!
  respondedBy: String!
  messageId: String! 
  createdBy: String!
  answerLink: String!
  value: BigInt!
  expiryTime: BigInt!
  messageLink: String! 
  answered: Boolean
  claimed: Boolean
  response: BigInt!
  createdAt: BigInt!
  tips: BigInt!
  tipsTotalValue: BigInt!
  responseType: BigInt!
  responseValue: BigInt!
  valueAfterDeduction: BigInt!
  respondedAt: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt!
}


type ResponseCreatedEntity @entity {
  id: ID!
  txHash: String!
  createdAt: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt!
  messageId: String!
  createdBy: String! 
  respondedBy: String! 
  responseType: BigInt!
  responseValue: BigInt! 
  answerLink: String! 
  valueAfterDeduction: BigInt! 
  respondedAt: BigInt!
}

type EResponseMarked @entity {
  id: ID!
  txHash: String!
  createdAt: BigInt!
  messageId: String!
  createdBy: String!
  respondedBy: String!
  responseType: BigInt!
}


type MessageValueClaimedEntity @entity {
  id: ID!
  txHash: String!
  messageId: String! 
  createdBy: String! 
  value: BigInt! 
  createdAt: BigInt!
}


type TipCreatedEntity @entity {
  id: ID!
  txHash: String!
  messageId: String! 
  tipId: String! 
  createdBy: String! 
  value: BigInt! 
  claimed: Boolean
  createdAt: BigInt!
}


type TipValueClaimedEntity @entity {
  id: ID!
  txHash: String!
  messageId: String! # bytes32
  tipId: String! # bytes32
  createdBy: String! 
  value: BigInt! 
  createdAt: BigInt!
}


type AmountReceivedEntity @entity {
  id: ID!
  txHash: String!
  receiver: String! 
  value: BigInt! 
  createdAt: BigInt!
  facet: String!
}

type EDonationMade @entity {
  id: ID!
  txHash: String!
  sender: String!
  donationAddress: String! 
  value: BigInt! 
  createdAt: BigInt!

}



type TransferEntity @entity {
  id: ID!
  txHash: String!
  sender: String!
  recipient: String! 
  value: BigInt! 
  createdAt: BigInt!
}



type EUserValidation @entity {
  id: ID!
  txHash: String!
  sender: String! 
  receiver: String!
  message: String!
  createdAt: BigInt!
}

type EDonationAddressChanged @entity {
  id: ID!
  txHash: String!
  sender: String! 
  donationAddress: String!
  createdAt: BigInt!

}


type BlockedEntity @entity {
  id: ID!
  txHash: String!
  sender: String! 
  receiver: String!
  createdAt: BigInt!
}

type UnBlockedEntity @entity {
  id: ID!
  txHash: String!
  sender: String! 
  receiver: String!
  createdAt: BigInt!
}



type WhitelistedEntity @entity {
  id: ID!
  txHash: String!
  sender: String! 
  receiver: String!
  createdAt: BigInt!
}
type UnWhitelistedEntity @entity {
  id: ID!
  txHash: String!
  sender: String! 
  receiver: String!
  createdAt: BigInt!
}


type FollowEntity @entity {
  id: ID!
  txHash: String!
  follower: String! 
  followed: String!
  createdAt: BigInt!
}
type UnFollowEntity @entity {
  id: ID!
  txHash: String!
  unFollower: String! 
  unFollowed: String!
  createdAt: BigInt!
}

type WithdrawEntity @entity {
  id: ID!
  txHash: String!
  user: String!
  value: BigInt!
  createdAt: BigInt!
}




type OwnershipTransferredEntity @entity{
  id: ID!
  role: String!
  sender: String!
  previousOwner: String!
  newOwner: String!
  txHash: String!
  createdAt: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt!
}

type RoleAdminChangedEntity @entity {
  id: ID!
  role: String!
  sender: String!
  previousAdminRole: String!
  newAdminRole: String!
  txHash: String!
  createdAt: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt!
}

type RoleGrantedEntity @entity {
  id: ID!
  role: String!
  sender: String!
  account: String!
  txHash: String!
  createdAt: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt!
}

type RoleRevokedEntity @entity {
  id: ID!
  role: String!
  sender: String!
  account: String!
  txHash: String!
  createdAt: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt! 
}


type FiatUserWithdrawEntity @entity {
  id: ID!
  sender: String!
  amount: BigInt!
  txHash: String!
  createdAt: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt! 
}

type RoleWithdrawEntity @entity {
  id: ID!
  signerOne: String!
  signerTwo: String!
  sender: String!
  account: String!
  role: String!
  amount: BigInt!
  txHash: String!
  createdAt: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt! 
}

type RegisterFiatUserEntity @entity {
  id: ID!
  sender: String!
  txHash: String!
  createdAt: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt! 
}
